Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	
+++ b/main.py	(date 1690728311939)
@@ -6,20 +6,22 @@
     def __init__(self):
         super().__init__()
 
+        # Color settings
+        self.bg_color = "white"
+        self.txt_color = "black"
+
+
         self.geometry("400x600")
         self.resizable(False, False)
         self.title("MoneyREsult")
 
         # Change theme
-        self.theme_frame = tk.Frame()
-        self.theme_frame.grid(row=0, column=0)
-
-        self.scale = tk.Scale(self.theme_frame, from_=0, to=1, orient=tk.HORIZONTAL, showvalue=False)
+        self.scale = tk.Scale(self, from_=0, to=1, orient=tk.HORIZONTAL, showvalue=False, command=self.theme_change)
         self.scale.grid(row=0, column=0, sticky="wn")
 
         # RadioButton Frame
         # Make Frame of RadioButton
-        self.radio_btn_frame = tk.Frame(borderwidth=1, relief=tk.SOLID)
+        self.radio_btn_frame = tk.Frame(borderwidth=1, relief=tk.SOLID, bg=self.bg_color)
         self.radio_btn_frame.grid(row=1, column=0, sticky="wesn")
 
         self.ch = tk.IntVar()
@@ -38,22 +40,28 @@
         # Result
         # Result var
         self.result = 0
-        tk.Label(self, text=str(self.result), font=("Arial", 50)).grid(row=3, column=0, sticky="wesn")
+        tk.Label(self, text=str(self.result), font=("Arial", 50), bg=self.bg_color, fg=self.txt_color).\
+            grid(row=3, column=0, sticky="wesn")
 
-        tk.Button(self, text="Result!", command=self.get_result, font=("Arial", 36)).grid(row=5, column=0, sticky="wesn")
+        tk.Button(self, text="Result!", command=self.get_result, font=("Arial", 36), bg=self.bg_color, fg=self.txt_color).\
+            grid(row=5, column=0, sticky="wesn")
 
         self.grid_rowconfigure(3, minsize=154)
         self.grid_columnconfigure(0, minsize=400)
         self.money_get_frame.grid_columnconfigure(0, minsize=135)
         self.money_get_frame.grid_columnconfigure(2, minsize=135)
 
+    def frame_color(self):
+        self.money_get_frame["bg"] = self.bg_color
+        self.radio_btn_frame["bg"] = self.bg_color
+
 
     def draw_radio_btn(self):
 
-        tk.Label(self.radio_btn_frame, text="Settings!", font=("Arial", 16)).grid(row=0, column=0)
+        tk.Label(self.radio_btn_frame, text="Settings!", font=("Arial", 16), bg=self.bg_color, fg=self.txt_color)\
+            .grid(row=0, column=0)
         for i, j in zip(["Only coins!", "Only bill!", "All!"], [2, 1, 0]):
-            tk.Radiobutton(self.radio_btn_frame, text=i, variable=self.ch, command=self.change_mode, value=j, padx=30, font=("Arial", 12)).\
-                grid(row=1, column=j)
+            tk.Radiobutton(self.radio_btn_frame, text=i, variable=self.ch, command=self.change_mode, value=j, bg=self.bg_color, fg=self.txt_color, padx=30, font=("Arial", 12)).grid(row=1, column=j)
 
         self.radio_btn_frame.grid_rowconfigure(1, minsize=40)
 
@@ -88,13 +96,13 @@
         for rows_index, bill_text in zip(rows_index_list, bill_cost):
             for column_index in range(len(bill_text)):
                 if self.get_radio_btn() == 2 and bill_text[column_index] > 10:
-                    tk.Label(self.money_get_frame, text=str(bill_text[column_index]), fg="grey", font=("Arial", 16)). \
+                    tk.Label(self.money_get_frame, text=str(bill_text[column_index]), bg=self.bg_color, fg="grey", font=("Arial", 16)). \
                         grid(row=rows_index, column=column_index)
                 elif self.get_radio_btn() == 1 and bill_text[column_index] <= 10:
-                    tk.Label(self.money_get_frame, text=str(bill_text[column_index]), fg="grey", font=("Arial", 16)). \
+                    tk.Label(self.money_get_frame, text=str(bill_text[column_index]), bg=self.bg_color, fg="grey", font=("Arial", 16)). \
                         grid(row=rows_index, column=column_index)
                 else:
-                    tk.Label(self.money_get_frame, text=str(bill_text[column_index]), font=("Arial", 16)). \
+                    tk.Label(self.money_get_frame, text=str(bill_text[column_index]), bg=self.bg_color, fg=self.txt_color, font=("Arial", 16)). \
                         grid(row=rows_index, column=column_index)
 
             self.money_get_frame.grid_rowconfigure(rows_index, minsize=50)
@@ -112,14 +120,41 @@
                 count_money += int(self.entry_get[i].get()) * bill_cost[i]
             finally:
                 break
+
         return count_money
 
     def get_result(self):
         self.result = self.count_result()
-        tk.Label(self, text=str(self.result), font=("Arial", 50), bg="grey").grid(row=3, column=0, sticky="wesn")
+        #for i in range(12):
+        #    print(self.entry_get[i].get())
+        tk.Label(self, text=str(self.result), font=("Arial", 50), bg=self.bg_color, fg=self.txt_color).\
+            grid(row=3, column=0, sticky="wesn")
+
+    def theme_change(self, mode):
+        print(mode)
+        if mode:
+            self.bg_color = "black"
+            self.txt_color = "white"
+        if not mode:
+            self.bg_color = "white"
+            self.txt_color = "black"
+
+        self.draw_radio_btn()
+        self.frame_color()
+        self.draw_money_get_label()
+
+        tk.Label(self, text=str(self.result), font=("Arial", 50), bg=self.bg_color, fg=self.txt_color). \
+            grid(row=3, column=0, sticky="wesn")
+
+        tk.Button(self, text="Result!", command=self.get_result, font=("Arial", 36), bg=self.bg_color, fg=self.txt_color). \
+            grid(row=5, column=0, sticky="wesn")
+
+        self["bg"] = self.bg_color
+
 
     def change_mode(self):
         print(self.ch.get())
+
         self.make_zero()
         self.draw_money_get_label()
         self.draw_entry_get()
diff --git a/version 1.py b/version 1.py
new file mode 100644
